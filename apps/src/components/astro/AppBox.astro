---
import type { AHQStoreApplication } from "ahqstore-types";
import { Image } from "astro:assets";
import { getImage } from "astro:assets";

interface Props {
  application: AHQStoreApplication;
  img: string;
  path: string;
}

const { application, img, path } = Astro.props as Props;

const responsiveWidths = [32, 64, 128, 256];

const optiImg = await getImage({
  src: img,
  format: "webp",
  // For LCP, ensure `sizes` attribute is passed to the img tag
  // to help browser pick the right size quickly.
  // This height is for the *output* image. If it's a background, it's just a hint.
  widths: responsiveWidths, // Generate multiple widths
  inferSize: true, // Still useful for the aspect ratio
  quality: 80,
});
---

<div class="w-full h-full flex gap-1 sm:gap-2 registerOnClick" data-path={path}>
  <Image
    class="m-0 size-auto border-none rounded-xl"
    src={optiImg.src}
    srcset={optiImg.srcSet.attribute}
    alt={`Icon for ${application.appDisplayName}`}
    height={optiImg.attributes.height}
    width={optiImg.attributes.width}
    loading="eager"
    decoding="async"
    fetchpriority="high"
  />
  <div class="w-full h-full flex flex-col overflow-hidden gap-1 sm:gap-2">
    <h1
      class="mt-1 sm:mt-2 sm:mb-1 mr-auto sm:m-0 text-sm sm:text-lg md:text-xl font-medium sm:font-bold font-sans"
    >
      {application.appDisplayName}
    </h1>
    <h2 class="overflow-hidden line-clamp-1 sm:line-clamp-2">
      {application.description || "Click to view more"}
    </h2>
  </div>
</div>
