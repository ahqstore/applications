name: Deploy Astro

on:
  push:
    branches: ["master"]

  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

permissions: write-all

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Setup NodeJS
        uses: actions/setup-node@v4

      - name: Setup Rust
        run: |
          rustup default nightly

      - name: Fetch Data
        run: cargo run --release
        working-directory: fetches
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Commit SHA
        id: commits
        shell: pwsh
        run: |
          echo "ahqstore=$(cat ./apps/public/jsondump/commit_ahqstore)" >> "$GITHUB_OUTPUT"
          echo "fdroid=$(cat ./apps/public/jsondump/commit_fdroid)" >> "$GITHUB_OUTPUT"
          echo "winget=$(cat ./apps/public/jsondump/commit_win32)" >> "$GITHUB_OUTPUT"
          echo "linux=$(cat ./apps/public/jsondump/commit_linux)" >> "$GITHUB_OUTPUT"

      - name: Checkout Win32 Repo
        uses: actions/checkout@v4
        with:
          repository: ahqstore/repo_win32
          path: repo_win32
          ref: ${{ steps.commits.outputs.winget }}

      - name: Checkout Linux Repo
        uses: actions/checkout@v4
        with:
          repository: ahqstore/repo_linux
          path: repo_linux
          ref: ${{ steps.commits.outputs.linux }}

      - name: Checkout FDroid Repo
        uses: actions/checkout@v4
        with:
          repository: ahqstore/repo_android
          path: repo_android
          ref: ${{ steps.commits.outputs.fdroid }}

      - name: Checkout AHQStore Repo
        uses: actions/checkout@v4
        with:
          repository: ahqstore/repo_community
          path: repo_community
          ref: ${{ steps.commits.outputs.ahqstore }}

      - name: Tree
        shell: pwsh
        run: tree

      - name: Build
        run: |
          npm i -g pnpm
          pnpm install
          pnpm build
        working-directory: apps

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: apps/dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
